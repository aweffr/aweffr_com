# Generated by Django 3.2 on 2021-04-22 15:46

import blog.models
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='RelatedLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='连接名')),
                ('link', models.CharField(max_length=255, verbose_name='连接')),
            ],
            options={
                'verbose_name': '相关链接',
                'verbose_name_plural': '相关链接',
            },
        ),
        migrations.CreateModel(
            name='UploadedFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='slug')),
                ('title', models.CharField(blank=True, max_length=255)),
                ('file', models.FileField(upload_to='files/')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': '文件',
                'verbose_name_plural': '文件',
            },
        ),
        migrations.CreateModel(
            name='UploadedImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('image', models.ImageField(height_field='height', upload_to=blog.models.get_uploaded_filename, width_field='width')),
                ('width', models.IntegerField(blank=True, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': '图片',
                'verbose_name_plural': '图片',
            },
        ),
        migrations.CreateModel(
            name='Tweet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='正文')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='blog.uploadedimage', verbose_name='配图')),
                ('related_links', models.ManyToManyField(blank=True, related_name='_blog_tweet_related_links_+', to='blog.RelatedLink', verbose_name='相关链接')),
            ],
            options={
                'verbose_name': '碎碎念',
                'verbose_name_plural': '碎碎念',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cnt_current', models.IntegerField(verbose_name='当前进度')),
                ('cnt_total', models.IntegerField(verbose_name='总量')),
                ('detail_markdown', models.TextField(blank=True, verbose_name='详情')),
                ('time_modified', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='blog.uploadedimage', verbose_name='配图')),
                ('related_files', models.ManyToManyField(blank=True, related_name='_blog_task_related_files_+', to='blog.UploadedFile', verbose_name='附件')),
                ('related_links', models.ManyToManyField(blank=True, related_name='_blog_task_related_links_+', to='blog.RelatedLink', verbose_name='相关链接')),
            ],
            options={
                'verbose_name': '想学清单',
                'verbose_name_plural': '想学清单',
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='标题')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='slug')),
                ('video_iframe', models.TextField(blank=True, verbose_name='视频iframe')),
                ('type', models.CharField(choices=[('ARTICLE', 'ARTICLE'), ('ARCHIVE', 'ARCHIVE'), ('STUDY', 'STUDY')], default='ARTICLE', max_length=255, verbose_name='类型')),
                ('source', models.CharField(choices=[('原创', '原创'), ('bilibili', 'bilibili'), ('知乎', '知乎'), ('财新', '财新'), ('技术演讲', '技术演讲'), ('youtube', 'youtube'), ('公开课', '公开课'), ('其他', '其他')], default='原创', max_length=255, verbose_name='来源')),
                ('is_published', models.BooleanField(default=False, verbose_name='已发表')),
                ('time_published', models.DateTimeField(blank=True, null=True, verbose_name='发表时间')),
                ('time_modified', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('abstract_markdown', models.TextField(blank=True, verbose_name='摘要')),
                ('content_markdown', models.TextField(verbose_name='正文')),
                ('media_img', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='blog.uploadedimage', verbose_name='封面配图')),
                ('related_files', models.ManyToManyField(blank=True, related_name='_blog_article_related_files_+', to='blog.UploadedFile', verbose_name='附件')),
                ('related_links', models.ManyToManyField(blank=True, related_name='_blog_article_related_links_+', to='blog.RelatedLink', verbose_name='相关链接')),
            ],
            options={
                'verbose_name': '随笔',
                'verbose_name_plural': '随笔',
            },
        ),
    ]
